{"version":3,"file":"index.js","sources":["../src/default.ts","../src/utils.ts","../src/index.ts"],"sourcesContent":["const defaults: options = {\r\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n  canvas: null,\r\n  width: 128,\r\n  height: 128,\r\n  shape: 'square',\r\n  fontColor: 'white',\r\n  backgroundColor: 'black',\r\n  text: 'C',\r\n  fontFamily: 'Helvetica',\r\n  fontSize: 64\r\n}\r\nexport type shape = 'square' | 'circle' | 'rounded'\r\nexport interface noEmptyOptions {\r\n  canvas: HTMLCanvasElement | null\r\n  width: number\r\n  height: number\r\n  shape: shape\r\n  fontColor: string\r\n  backgroundColor: string\r\n  text: string\r\n  fontFamily: string\r\n  fontSize: number\r\n}\r\ntype Copy<T> = { [K in keyof T]?: T[K] }\r\nexport type options = Copy<noEmptyOptions>\r\nexport default defaults\r\n","interface offsets {\r\n  vertical: number\r\n  horizontal: number\r\n}\r\nexport function measureOffsets (\r\n  text: string,\r\n  fontFamily: string,\r\n  fontSize: number,\r\n  canvas,\r\n  ctx\r\n): offsets {\r\n  ctx.font = `${fontSize}px${fontFamily}`\r\n\r\n  canvas.width = 2 * ctx.measureText(text).width\r\n  canvas.height = 2 * fontSize\r\n\r\n  ctx.font = `${fontSize}px${fontFamily}`\r\n  ctx.textBaseline = 'alphabetic'\r\n  ctx.textAlign = 'center'\r\n  ctx.fillStyle = 'white'\r\n  ctx.fillText(text, canvas.width / 2, canvas.height / 2)\r\n\r\n  const data = ctx.getImageData(0, 0, canvas.width, canvas.height).data\r\n\r\n  let textTop = 0\r\n  let textBottom = 0\r\n  for (let y = 0; y <= canvas.height; y++) {\r\n    for (let x = 0; x <= canvas.width; x++) {\r\n      const rIndex = 4 * (canvas.width * y + x)\r\n      const rValue = data[rIndex]\r\n      if (rValue === 255) {\r\n        if (textTop === 0) {\r\n          textTop = y\r\n        }\r\n        textBottom = y\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const canvasHorizontalCenterLine = canvas.height / 2\r\n  const textHorizontalCenterLine = (textBottom - textTop) / 2 + textTop\r\n\r\n  let textLeft = 0\r\n  let textRight = 0\r\n  for (let x = 0; x <= canvas.width; x++) {\r\n    for (let y = 0; y <= canvas.height; y++) {\r\n      const rIndex = 4 * (canvas.width * y + x)\r\n      const rValue = data[rIndex]\r\n\r\n      if (rValue === 255) {\r\n        if (textTop === 0) {\r\n          textLeft = x\r\n        }\r\n        textRight = x\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const canvasVerticalCenterLine = canvas.width / 2\r\n  const textVerticalCenterLine = (textRight - textLeft) / 2 + textLeft\r\n\r\n  return {\r\n    vertical: canvasHorizontalCenterLine - textHorizontalCenterLine,\r\n    horizontal: canvasVerticalCenterLine - textVerticalCenterLine\r\n  }\r\n}\r\n","'use strict'\r\n\r\nimport defaults, { noEmptyOptions, options, shape } from './default'\r\nimport { measureOffsets } from './utils'\r\n\r\nexport class Logo {\r\n  public canvas: HTMLCanvasElement\r\n  public ctx: CanvasRenderingContext2D\r\n  public width: number\r\n  public height: number\r\n  public shape: shape\r\n  public fontColor\r\n  public backgroundColor\r\n  public text: string\r\n  public fontFamily: string\r\n  public fontSize: number\r\n\r\n  constructor (options: options = defaults) {\r\n    const data = Object.assign({}, defaults, options) as noEmptyOptions\r\n    this.canvas = (data.canvas != null) ? data.canvas : (document.createElement('camvas') as HTMLCanvasElement)\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D\r\n    this.width = data.width\r\n    this.height = data.height\r\n    this.shape = data.shape\r\n    this.fontColor = data.fontColor\r\n    this.backgroundColor = data.backgroundColor\r\n    this.text = data.text\r\n    this.fontFamily = data.fontFamily\r\n    this.fontSize = data.fontSize\r\n    this.canvas.width = 2 * this.width\r\n    this.canvas.height = 2 * this.height\r\n    // this.canvas.style.width = `${this.width}px`\r\n    // this.canvas.style.height = `${this.height}px`\r\n    this.ctx.scale(2, 2)\r\n  }\r\n\r\n  save (): void {\r\n    this.drawBackground()\r\n    this.drawText()\r\n    console.log('canvas', this.canvas)\r\n  }\r\n\r\n  drawText (): void {\r\n    this.ctx.fillStyle = this.fontColor\r\n    this.ctx.font = `${this.fontSize}px${this.fontFamily}`\r\n    this.ctx.textBaseline = 'alphabetic'\r\n    this.ctx.textAlign = 'center'\r\n    const offsets = measureOffsets(this.text, this.fontFamily, this.fontSize, this.canvas, this.ctx)\r\n    const x = this.width / 2 + offsets.horizontal\r\n    const y = this.height / 2 + offsets.vertical\r\n    this.ctx.fillText(this.text, x, y)\r\n  }\r\n\r\n  drawRounded (): void {\r\n    this.ctx.beginPath()\r\n    const radius = this.height / 10\r\n    this.ctx.moveTo(this.width, this.height)\r\n    this.ctx.arcTo(0, this.height, 0, 0, radius)\r\n    this.ctx.arcTo(0, 0, this.width, 0, radius)\r\n    this.ctx.arcTo(this.width, 0, this.width, this.height, radius)\r\n    this.ctx.arcTo(this.width, this.height, 0, this.height, radius)\r\n    this.ctx.fillStyle = this.backgroundColor\r\n    this.ctx.fill()\r\n  }\r\n\r\n  drawSquare (): void {\r\n    this.ctx.beginPath()\r\n    this.ctx.rect(0, 0, this.width, this.height)\r\n    this.ctx.fillStyle = this.backgroundColor\r\n    this.ctx.fill()\r\n  }\r\n\r\n  drawCircle (): void {\r\n    this.ctx.beginPath()\r\n    this.ctx.arc(this.width / 2, this.height / 2, this.height / 2, 0, 2 * Math.PI, false)\r\n    this.ctx.fillStyle = this.backgroundColor\r\n    this.ctx.fill()\r\n  }\r\n\r\n  drawBackground (): void {\r\n    switch (this.shape) {\r\n      case 'square':\r\n        this.drawSquare()\r\n        break\r\n      case 'circle':\r\n        this.drawCircle()\r\n        break\r\n      case 'rounded':\r\n        this.drawRounded()\r\n        break\r\n      default:\r\n        this.drawSquare()\r\n        break\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;EAAA,IAAM,QAAQ,GAAY;;MAExB,MAAM,EAAE,IAAI;MACZ,KAAK,EAAE,GAAG;MACV,MAAM,EAAE,GAAG;MACX,KAAK,EAAE,QAAQ;MACf,SAAS,EAAE,OAAO;MAClB,eAAe,EAAE,OAAO;MACxB,IAAI,EAAE,GAAG;MACT,UAAU,EAAE,WAAW;MACvB,QAAQ,EAAE,EAAE;GACb;;WCPe,cAAc,CAC5B,IAAY,EACZ,UAAkB,EAClB,QAAgB,EAChB,MAAM,EACN,GAAG;MAEH,GAAG,CAAC,IAAI,GAAG,UAAG,QAAQ,eAAK,UAAU,CAAE,CAAA;MAEvC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAA;MAC9C,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAA;MAE5B,GAAG,CAAC,IAAI,GAAG,UAAG,QAAQ,eAAK,UAAU,CAAE,CAAA;MACvC,GAAG,CAAC,YAAY,GAAG,YAAY,CAAA;MAC/B,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAA;MACxB,GAAG,CAAC,SAAS,GAAG,OAAO,CAAA;MACvB,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;MAEvD,IAAM,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAA;MAErE,IAAI,OAAO,GAAG,CAAC,CAAA;MACf,IAAI,UAAU,GAAG,CAAC,CAAA;MAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;cACtC,IAAM,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;cACzC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;cAC3B,IAAI,MAAM,KAAK,GAAG,EAAE;kBAClB,IAAI,OAAO,KAAK,CAAC,EAAE;sBACjB,OAAO,GAAG,CAAC,CAAA;mBACZ;kBACD,UAAU,GAAG,CAAC,CAAA;kBACd,MAAK;eACN;WACF;OACF;MAED,IAAM,0BAA0B,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;MACpD,IAAM,wBAAwB,GAAG,CAAC,UAAU,GAAG,OAAO,IAAI,CAAC,GAAG,OAAO,CAAA;MAErE,IAAI,QAAQ,GAAG,CAAC,CAAA;MAChB,IAAI,SAAS,GAAG,CAAC,CAAA;MACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;UACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACvC,IAAM,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;cACzC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;cAE3B,IAAI,MAAM,KAAK,GAAG,EAAE;kBAClB,IAAI,OAAO,KAAK,CAAC,EAAE;sBACjB,QAAQ,GAAG,CAAC,CAAA;mBACb;kBACD,SAAS,GAAG,CAAC,CAAA;kBACb,MAAK;eACN;WACF;OACF;MAED,IAAM,wBAAwB,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAA;MACjD,IAAM,sBAAsB,GAAG,CAAC,SAAS,GAAG,QAAQ,IAAI,CAAC,GAAG,QAAQ,CAAA;MAEpE,OAAO;UACL,QAAQ,EAAE,0BAA0B,GAAG,wBAAwB;UAC/D,UAAU,EAAE,wBAAwB,GAAG,sBAAsB;OAC9D,CAAA;EACH;;;MClDE,cAAa,OAA2B;UAA3B,wBAAA,EAAA,kBAA2B;UACtC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAmB,CAAA;UACnE,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAuB,CAAA;UAC3G,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAA;UACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;UACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;UACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;UACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;UAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAA;UAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;UACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;UACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;UAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;UAClC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;;;UAGpC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;OACrB;MAED,mBAAI,GAAJ;UACE,IAAI,CAAC,cAAc,EAAE,CAAA;UACrB,IAAI,CAAC,QAAQ,EAAE,CAAA;UACf,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;OACnC;MAED,uBAAQ,GAAR;UACE,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;UACnC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,UAAG,IAAI,CAAC,QAAQ,eAAK,IAAI,CAAC,UAAU,CAAE,CAAA;UACtD,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,YAAY,CAAA;UACpC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAA;UAC7B,IAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;UAChG,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,UAAU,CAAA;UAC7C,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAA;UAC5C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;OACnC;MAED,0BAAW,GAAX;UACE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAA;UACpB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;UAC/B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;UACxC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;UAC5C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;UAC3C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;UAC9D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;UAC/D,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAA;UACzC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAA;OAChB;MAED,yBAAU,GAAV;UACE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAA;UACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;UAC5C,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAA;UACzC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAA;OAChB;MAED,yBAAU,GAAV;UACE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAA;UACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;UACrF,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAA;UACzC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAA;OAChB;MAED,6BAAc,GAAd;UACE,QAAQ,IAAI,CAAC,KAAK;cAChB,KAAK,QAAQ;kBACX,IAAI,CAAC,UAAU,EAAE,CAAA;kBACjB,MAAK;cACP,KAAK,QAAQ;kBACX,IAAI,CAAC,UAAU,EAAE,CAAA;kBACjB,MAAK;cACP,KAAK,SAAS;kBACZ,IAAI,CAAC,WAAW,EAAE,CAAA;kBAClB,MAAK;cACP;kBACE,IAAI,CAAC,UAAU,EAAE,CAAA;kBACjB,MAAK;WACR;OACF;MACH,WAAC;EAAD,CAAC;;;;;;;;;;"}